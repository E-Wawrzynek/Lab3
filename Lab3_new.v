
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Lab3_new(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);

	assign LEDR[6:3] = 4'b0000;

	SevenSeg U1(.H(HEX1), .NUM(8'd88));
	SevenSeg U2(.H(HEX2), .NUM(8'd88));
	SevenSeg U3(.H(HEX3), .NUM(8'd88));
	SevenSeg U4(.H(HEX4), .NUM(8'd88));
	SevenSeg U5(.H(HEX5), .NUM(8'd88));

	reg reset_latch1 = 1'b0;
	wire reset_latch;
	always @(negedge KEY[0])
		begin
			reset_latch1 <= ~reset_latch1;
		end

	assign reset_latch = reset_latch1;

	wire s_clk;
	clock_divider #(1_000_000) C0(.clk(ADC_CLK_10), .reset_n(reset_latch), .slower_clk(s_clk));

	
	reg turn_side_r1 = 1'b0;
	wire turn_side_r;
	always @(negedge KEY[1])
		begin
			turn_side_r1 <= ~turn_side_r1;
		end
	assign turn_side_r = turn_side_r1;

	wire [2:0] CurrentState;
	wire [2:0] NextState;
	wire [2:0] CurrentState_mem;
	wire [2:0] CurrentState_manual;

	
	CSL S0(.clk(s_clk), .reset_n(reset_latch), .NextState(NextState), .CurrentState(CurrentState_manual));
	NSL N0(.CurrentState(CurrentState_manual), .SW(SW[1:0]), .turn_side_r(turn_side_r), .NextState(NextState));

	statemachine G0(.clk(s_clk), .CurrentState(CurrentState_mem));

	mux MU0(.CurrentState_mem(CurrentState_mem), .CurrentState_manual(CurrentState_manual), .SW9(SW[9]), .CurrentState(CurrentState));
	OL O0(.CurrentState(CurrentState), .clk(s_clk), .reset_n(reset_latch), .SW(SW[1:0]), .HEX0(HEX0), .LEDR_L(LEDR[9:7]), .LEDR_R(LEDR[2:0]));

	// reg [7:0] num1;
	// always @(CurrentState_mem)
    //     num1 <= CurrentState_mem;

    // SevenSeg S1(.H(HEX1), .NUM(num1));

endmodule
